apply from: file("../functions.gradle")

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply from: 'tinker-support.gradle'//微信热修复
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'walle'
/**Robust  美团热修复技术*/
//apply plugin: 'auto-patch-plugin'//生成patch时打开
//apply plugin: 'robust'//生成apk时打开
/**Robust  美团热修复技术*/
apply plugin: 'com.google.gms.google-services'
//dependencies 配置在此文件添加
apply from: file('../dependencies.gradle')
apply from: file('../gradle/tools/so_scan.gradle')

boolean hasDefaultPreinstallHandler = isRunningTask("Dev") || isRunningTask("Alpha")

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    sourceSets {
        androidTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')

        main {
            jniLibs.srcDirs = ['libs']
            java {
                if (!hasDefaultPreinstallHandler) {
                    java.srcDirs += ['src/market/java']
                }
            }
        }
    }

    defaultConfig {
        applicationId "com.song.sunset"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
//        jackOptions {
//            enabled true
//        }
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME     : project.getName(),
                             AROUTER_GENERATE_DOC    : "enable",
                             moduleName              : "app",
                             subModulesOfSugarAdapter: 'comic, base ,phoenix'
                ]
            }
        }

        ndk {
            abiFilters "armeabi-v7a"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias rootProject.KEY_ALIAS
            keyPassword rootProject.KEY_PASSWORD
            storeFile file(rootProject.STORE_FILE)
            storePassword rootProject.KEYSTORE_PASSWORD
        }
    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
//            signingConfig signingConfigs.release
            renderscriptDebuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable true
            jniDebuggable false
            signingConfig signingConfigs.release
            renderscriptDebuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "default"
    productFlavors {
        market {
            versionNameSuffix '-release'
        }
        dev {
            versionNameSuffix '-dev'
        }
        alpha {
            versionNameSuffix '-alpha'
        }
        xiaomi {
            versionNameSuffix '-xiaomi'
        }
        vivo {
            versionNameSuffix '-vivo'
        }
        huawei {
            versionNameSuffix '-huawei'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
    }
}
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${projectName}-${channel}-${buildType}-v${versionName}-${versionCode}.apk';
    // 渠道配置文件
//    channelFile = new File("${project.getProjectDir()}/channel")
    configFile = new File("${project.getProjectDir()}/channels.json")
}
//--------------------------greenDao配置--------------------------
apply plugin: 'org.greenrobot.greendao'
greendao {
    schemaVersion 2
    daoPackage 'com.sunset.greendao.gen'
    targetGenDir 'src/main/java'
}
//--------------------------greenDao配置--------------------------
repositories {
    mavenCentral()
}

//不同module的一级路径必须不同，否则会导致一个moudle中的一级路径失效！！！
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation files('libs/jbox2d-library-2.1.2.2.jar')
    implementation files('libs/slf4j-api-1.7.22.jar')

    implementation project(':annotation')
    kapt project(':processor')

    implementation project(':flutter')
    implementation project(':comic')
    implementation project(':base')
    implementation project(':neural')
    implementation project(':scankit')
    implementation project(':phoenix')
//    implementation project(':flutter_plugin_battery')
    implementation 'com.google.auto.service:auto-service:1.0'
}

subprojects{
    project.configurations.all {
        resolutionStrategy {
            force rootProject.ext.third.work
            force rootProject.ext.third.streamsupport
            force rootProject.ext.third.BaseRecyclerViewAdapterHelpe
            force rootProject.ext.third.lottie
            force rootProject.ext.third.glide_4_0_transformations
            force rootProject.ext.third.gpuimage
            force rootProject.ext.third.glide
            force rootProject.ext.third.fresco
            force rootProject.ext.third.fresco_processors
            force rootProject.ext.third.fresco_imagepipeline_okhttp3
            force rootProject.ext.third.fresco_animated_gif
            force rootProject.ext.third.fresco_animated_webp
            force rootProject.ext.third.fresco_webpsupport
            force rootProject.ext.third.swipebacklayout
            force rootProject.ext.third.scale_image
            force rootProject.ext.third.ijkplayer_java
            force rootProject.ext.third.ijkplayer_armv7a
            force rootProject.ext.third.ijkplayer_arm64
            force rootProject.ext.third.DanmakuFlameMaster
            force rootProject.ext.third.ndkbitmap_armv7a
            force rootProject.ext.third.ndkbitmap_x86
            force rootProject.ext.third.okhttp
            force rootProject.ext.third.okhttp_logging_interceptor
            force rootProject.ext.third.retrofit2
            force rootProject.ext.third.retrofit2_converter_gson
            force rootProject.ext.third.retrofit2_adapter_rxjava2
            force rootProject.ext.third.rxjava3_android
            force rootProject.ext.third.rxjava3_java
            force rootProject.ext.third.rxlifecycle
            force rootProject.ext.third.rxpermissions
            force rootProject.ext.third.FlycoTabLayout_Lib
            force rootProject.ext.third.nineoldandroids
            force rootProject.ext.third.greendao_generator
            force rootProject.ext.third.greendao
            force rootProject.ext.third.ultra_ptr
            force rootProject.ext.third.switchbutton
            force rootProject.ext.third.robust
            force rootProject.ext.third.walle
            force rootProject.ext.third.qrcodereaderview
            force rootProject.ext.third.mmkv
            force rootProject.ext.third.arouter
            force rootProject.ext.third.sugaradapter
            force rootProject.ext.third.coil
            force rootProject.ext.third.coil_video
            force rootProject.ext.third.coil_svg
            force rootProject.ext.third.coil_gif
            force rootProject.ext.third.refresh_kernel
            force rootProject.ext.third.refresh_header_classics
            force rootProject.ext.third.refresh_header_two_level
            force rootProject.ext.third.refresh_footer_ball
            force rootProject.ext.third.refresh_footer_classics
            force rootProject.ext.third.javapoet
            force rootProject.ext.third.mqttv3
            force rootProject.ext.third.mqtt_service
            force rootProject.ext.third.scanplus
            force rootProject.ext.third.hooklib
            force rootProject.ext.third.nativehook
            force rootProject.ext.third.xposedcompat
        }
    }
}
