include ':base'
include ':widget'
include ':comic'
include ':annotation'
include ':processor'
include ':app'
include ':flutter_comic'

setBinding(new Binding([gradle: this]))
//flutter module 对应的 include_flutter.groovy 实际目录地址
evaluate(new File(
        settingsDir,
        'flutter_comic/.android/include_flutter.groovy'
))

/**------------------------------ 以下为本地联合打包配置 ------------------------------ */
// 加载配置文件
Properties properties = new Properties()
properties.load(new FileInputStream("source.properties"))

class Source {
    String name
    String dir
}

// 把配置文件包装为键值对
def configs = [:]

properties.forEach { artifact, dir ->
    String[] str = artifact.split(':')
    if (str.size() != 2) {
        throw new Exception("「❌」source.properties 中 " + artifact + " 配置错误，请检查配置「❌」")
    }
    configs.put((artifact), new Source(name: str[1], dir: dir))
}

// include module
configs.forEach { artifact, source ->
    include ":${source.name}"
    project(":${source.name}").projectDir = new File(source.dir)
}

// 依赖替换
gradle.allprojects { pro ->
    if (pro == pro.rootProject) {
        return
    }
    pro.configurations.all {
        resolutionStrategy.dependencySubstitution {
            configs.forEach { artifact, source ->
                substitute module(artifact) with project(":${source.name}")
            }
        }
    }
}